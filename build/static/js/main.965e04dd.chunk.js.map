{"version":3,"sources":["logo.jpeg","components/InvoiceApp/OrderList/OrderList.js","components/InvoiceApp/SelectedOrdersList/SelectedOrdersList.js","components/InvoiceApp/InvoiceForm/InvoiceForm.js","Utils/dbCall.js","Utils/Common.js","components/InvoiceApp/InvoiceApp.js","components/DeleteInvoice/BillRow/BillRow.js","components/DeleteInvoice/DeleteInvoice.js","components/Login/Login.js","Utils/PublicRoute.js","Utils/PrivateRoute.js","components/Home/Home.js","App.js","components/costumHooks/useToken.js","reportWebVitals.js","index.js"],"names":["OrderList","props","useState","checkedState","setCheckedState","orders","setOrders","selectedOrders","setSelectedOrders","useEffect","axios","get","process","then","response","data","ordiniWCompany","Array","length","fill","catch","error","console","log","aggiornami","className","map","e","index","type","id","value","id_external_order","checked","onChange","position","id_order","daNonAnnullare","updateOrderSelection","item","liftState","updatedCheckedState","handleOnChange","htmlFor","href","number_external_order","total_order","Company","name","SelectedOrdersList","lista","filter","InvoiceForm","dataReady","setDataReady","companies","setCompanies","useForm","mode","criteriaMode","defaultValues","iva_amount","register","watch","errors","formState","handleSubmit","watchIVA","companiesList","onSubmit","JSON","stringify","ordiniDaAggiornare","formData","order","post","form","ordersToUpdate","alert","aggiornaOrdini","required","placeholder","render","message","style","id_company","valueAsDate","pattern","listaSelezionata","getUser","userStr","sessionStorage","getItem","parse","getToken","removeUserSession","removeItem","setUserSession","token","user","setItem","InvoiceApp","update","setUpdate","navigate","useNavigate","onClick","replace","ordiniSelezionati","BillRow","key","bill","exist","setExist","deleteConfirm","setDeleteConfirm","iAmDeliting","setIAmDeleting","bill_date","id_bs","total","delete","id_internal_bill","setInterval","DeleteInvoice","setData","billsDataReady","setBillsDataReady","dataInizio","startFrom","substring","dataFine","upTo","rangedBills","useFormInput","initialValue","setValue","target","Login","setError","loading","setLoading","username","password","autoComplete","color","status","disabled","PublicRoute","children","redirectTo","PrivateRoute","auth","setAuth","code","to","Home","App","authLoading","setAuthLoading","setToken","userToken","useToken","alt","src","logo","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+VAAe,MAA0B,kC,uCCmG1BA,MA/Ff,SAAmBC,GAEjB,MAAwCC,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,EAA2BF,mBAAS,MAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA2CJ,mBAAS,MAApD,mBAAOK,EAAP,KAAsBC,EAAtB,KA8BA,OA5BAC,qBAAU,WACRC,IAAMC,IAAN,UAAaC,uBAAb,oCACGC,MAAK,SAAAC,GACJ,IAAIC,EAAOD,EAASC,KAAKC,eAGzBR,EAAkB,IAAIS,MAAMF,EAAKG,QAAQC,KAAK,OAC9Cf,EAAgB,IAAIa,MAAMF,EAAKG,QAAQC,MAAK,IAG5Cb,EAAUS,MACTK,OAAM,SAAAC,GACTC,QAAQC,IAAIF,QAEd,CAACpB,EAAMuB,aAcAnB,EACP,sBAAKoB,UAAU,sBAAf,UACE,sDACA,qBAAKA,UAAU,iBAAf,SACGpB,EAAOqB,KAAI,SAACC,EAAGC,GAEd,OAEI,qBAAKH,UAAU,aAAf,SACE,sBAAKA,UAAU,eAAf,UACE,uBACEI,KAAK,WACLC,GAAE,0BAAqBF,GAEvBG,MAAOJ,EAAEK,kBACTC,QAAS9B,EAAayB,GACtBM,SAAU,kBA1BL,SAACC,EAAUC,EAAUC,GAC1C,IAAMC,EAAuB/B,EAAemB,KAAI,SAACa,EAAMX,GAAP,OAC9CA,IAAUO,EAAYE,EAAiBD,EAAW,KAAQG,KAC5D/B,EAAkB8B,GAClBrC,EAAMuC,UAAUF,GAChB,IAAMG,EAAsBtC,EAAauB,KAAI,SAACa,EAAMX,GAAP,OAC3CA,IAAUO,GAAYI,EAAOA,KAC/BnC,EAAgBqC,GAmBgBC,CAAed,EAAOD,GAAIxB,EAAayB,OAEzD,wBAAOe,QAAO,0BAAqBf,GAAnC,UACE,qBAAKH,UAAU,kBAAf,SACE,sBAAMA,UAAU,aAAamB,KAAK,GAAlC,SACCjB,EAAEkB,0BAGL,uBAAMpB,UAAU,cAAhB,UAA+B,SAA/B,IAAqCE,EAAEmB,eAIvC,qBAAKrB,UAAU,cAAf,SACE,sBAAMA,UAAU,aAAamB,KAAK,GAAlC,SACCjB,EAAEoB,QAAQC,gBAtBcpB,WA+CtC,+C,MC7DMqB,MA7Bf,YAAsC,IAATC,EAAQ,EAARA,MAE3B,EAA4ChD,mBAAS,IAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KAWA,OATAC,qBAAU,WAEPD,EADW,OAAR0C,EACeA,EAGC,MAEnB,CAACA,IAGF,gCACE,0FACA,qBAAKzB,UAAU,yBAAf,SAEMlB,EAAe4C,QAAO,SAACxB,EAAEC,GAAH,OAAgB,OAAJD,KAC/BD,KAAI,SAACC,EAAGC,GACP,OAAQ,qBAAKH,UAAU,iBAAf,SAAqDE,EAAEkB,uBAAvD,aAA2CjB,a,6BCsKpDwB,MAxLf,SAAqBnD,GACnB,MAAkCC,oBAAS,GAA3C,mBAAOmD,EAAP,KAAkBC,EAAlB,KACA,EAAkCpD,mBAAS,MAA3C,mBAAOqD,EAAP,KAAkBC,EAAlB,KACA,EAAiEC,YAAQ,CAACC,KAAK,SAAUC,aAAa,MAAOC,cAAe,CAACC,WAAY,UAAjIC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,MAAoBC,EAAtC,EAAyBC,UAAaD,OAAUE,EAAhD,EAAgDA,aAC1CC,EAAWJ,EAAM,YAAY,GA2BnC,OAVAtD,qBAAW,WCxBJC,IAAMC,IAAN,UAAaC,uBAAb,iCACJC,MAAK,SAAAC,GAEJ,OADWA,EAASC,KAAKqD,iBAExBhD,OAAM,SAAAC,GACTC,QAAQC,IAAIF,MDoBQR,MAAK,SAAAE,GACvByC,EAAazC,GACbuC,GAAa,QAIf,IAGOD,EACL,qBAAK5B,UAAU,iBAAf,SACI,uBAAMA,UAAU,GAAG4C,SAAUH,GA3BpB,SAACnD,GAChBO,QAAQC,IAAI,4BAA6BR,GACzCO,QAAQC,IAAI,4BAA6B+C,KAAKC,UAAUxD,IACxDO,QAAQC,IAAI,0CAA2C+C,KAAKC,UAAUtE,EAAMuE,qBAC5E,ICJyBC,EDKV1D,ECLoByD,EDKdvE,EAAMuE,mBAAmBrB,QAAO,SAAAuB,GAAK,OAAY,OAAVA,KAAgBhD,KAAI,SAAAgD,GAAK,OAAEA,EAAM1C,qBCJxFtB,IAAMiE,KAAN,UAAc/D,uBAAd,2BAAmE,CACxEG,KAAM,CACJ6D,KAAKH,EACLI,eAAgBL,KAGjB3D,MAAK,SAAUC,GACdQ,QAAQC,IAAIT,MAEbM,OAAM,SAAUC,GACfC,QAAQC,IAAI,yBAA0BF,GACtCyD,MAAM,4CDNNA,MAAMR,KAAKC,UAAUxD,IAEvB,MAAOY,GACLmD,MAAM,0CCTgB,IAACL,EAAUD,EDWnCvE,EAAM8E,oBAgBA,UACI,sBAAKtD,UAAU,cAAf,UACF,qBAAKA,UAAU,YAAf,4BACI,sBAAKA,UAAU,WAAf,UACE,+CAAOA,UAAU,cAAiBqC,EAAS,QAAS,CAAEkB,SAAU,oCAAhE,IAAkGC,YAAY,oBAC9G,cAAC,IAAD,CACEjB,OAAQA,EACRhB,KAAK,QACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QAET,OADA7D,QAAQC,IAAI,WACJ,sBAAM6D,MAAO,CAAC,cAAc,MAAO,MAAQ,OAA3C,SAAoDD,UAIlE,qBAAK1D,UAAU,YAAf,uBACA,gDAAQA,UAAU,uBAA0BqC,EAAS,eAArD,aACGP,EAAU7B,KAAK,SAAAC,GAAC,OAAI,wBAAkCI,MAAOJ,EAAE0D,WAA3C,SAAwD1D,EAAEqB,MAA1D,YAAkBrB,EAAE0D,mBAE3C,qBAAK5D,UAAU,YAAf,kCACA,mCAAOA,UAAU,+BACfI,KAAK,QACDiC,EAAS,YAAa,CACxBwB,aAAa,MAGjB,qBAAK7D,UAAU,YAAf,mCACA,mCAAOA,UAAU,+BACfI,KAAK,QACDiC,EAAS,oBAAqB,CAChCwB,aAAa,MAGjB,qBAAK7D,UAAU,YAAf,mCACA,mCAAOA,UAAU,+BACfI,KAAK,QACDiC,EAAS,mBAAoB,CAC/BwB,aAAa,MAGjB,qBAAK7D,UAAU,YAAf,4BACA,mCAAOA,UAAU,+BACfI,KAAK,QACDiC,EAAS,gBAAiB,CAC5BwB,aAAa,MAGjB,qBAAK7D,UAAU,YAAf,4BACA,sBAAKA,UAAU,WAAf,UACE,mCAAOA,UAAU,aAAaI,KAAK,UAC5BiC,EAAS,QAAS,CACpBkB,SAAU,qBACVO,QAAS,CACPxD,MAAM,4BACNoD,QAAS,2BAKhB,cAAC,IAAD,CACEnB,OAAQA,EACRhB,KAAK,QACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACT,OAAQ,sBAAMC,MAAO,CAAC,cAAc,MAAO,MAAQ,OAA3C,SAAoDD,UAIlE,qBAAK1D,UAAU,YAAf,uBACA,sBAAKA,UAAU,WAAf,UACE,iDAAWqC,EAAS,aAApB,IAAiCjC,KAAK,cACtC,cAAC,IAAD,CACEmC,OAAQA,EACRhB,KAAK,WACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACX,OAAQ,+BAAOA,OAGfhB,GACA,gCACE,8CACA,+CAAO1C,UAAU,cAAiBqC,EAAS,YAAa,CACtDkB,SAAU,iCACVO,QAAS,CACPxD,MAAM,4BACNoD,QAAS,0BAJb,IAMG1D,UAAU,WACVwD,YAAY,gBACf,cAAC,IAAD,CACEjB,OAAQA,EACRhB,KAAK,YACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACT,OAAQ,sBAAMC,MAAO,CAAC,cAAc,MAAO,MAAQ,OAA3C,SAAoDD,aAMtE,qBAAK1D,UAAU,YAAf,qCACA,sBAAKA,UAAU,WAAf,UACE,+CAAOA,UAAU,aAAaI,KAAK,UAAaiC,EAAS,qBAAsB,CAAEkB,SAAU,oCAA3F,IAA6HC,YAAY,mBACzI,cAAC,IAAD,CACEjB,OAAQA,EACRhB,KAAK,qBACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACT,OAAQ,sBAAMC,MAAO,CAAC,cAAc,MAAO,MAAQ,OAA3C,SAAoDD,UAIlE,qBAAK1D,UAAU,YAAf,uCACA,mCAAOA,UAAU,+BACbI,KAAK,QACDiC,EAAS,0BAA2B,CACtCwB,aAAa,EACbN,SAAU,qCAGhB,qBAAKvD,UAAU,YAAf,6BACA,sBAAKA,UAAU,WAAf,UACE,+CAAOA,UAAU,uBAA0BqC,EAAS,OAAQ,CAAEkB,SAAU,oCAAxE,IAA0GC,YAAY,SACtH,cAAC,IAAD,CACEjB,OAAQA,EACRhB,KAAK,OACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACT,OAAQ,sBAAMC,MAAO,CAAC,cAAc,MAAO,MAAQ,OAA3C,SAAoDD,aAoBpE,8BAAMlF,EAAMuF,mBACd,uBAAO/D,UAAU,eAAeI,KAAK,gBAGzC,uD,OEzLK4D,EAAU,WACrB,IAAMC,EAAUC,eAAeC,QAAQ,QACvC,OAAIF,EAAgBpB,KAAKuB,MAAMH,GACnB,MAIDI,EAAW,WACtB,OAAOH,eAAeC,QAAQ,UAAY,MAI/BG,EAAoB,WAC/BJ,eAAeK,WAAW,SAC1BL,eAAeK,WAAW,SAIfC,EAAiB,SAACC,EAAOC,GACpCR,eAAeS,QAAQ,QAASF,GAChCP,eAAeS,QAAQ,OAAQ9B,KAAKC,UAAU4B,K,MC0BjCE,MArCf,SAAoBpG,GAClB,MAA4CC,mBAAS,MAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAA4BN,oBAAS,GAArC,mBAAOoG,EAAP,KAAeC,EAAf,KACMJ,EAAOV,IAWTe,EAAWC,cAQf,OACE,sBAAKhF,UAAU,cAAf,UACE,sBAAKA,UAAU,UAAf,qBACW0E,EAAKnD,KADhB,IAEE,uBAAOnB,KAAK,SAAS6E,QAVN,WACnBX,IACAS,EAAS,UAAW,CAACG,SAAQ,KAQmB5E,MAAM,cAEpD,sDAEA,cAAC,EAAD,CAAWS,UApBW,SAACoE,GACzBpG,EAAkBoG,IAmByBpF,WAAY8E,IACrD,cAAC,EAAD,CAAa9B,mBAAoBjE,EAAgBwE,eA1BnB,WAChCwB,GAAWD,GACX9F,EAAkB,OAwB4EgF,iBAAkB,cAAC,EAAD,CAAoBtC,MAAO3C,U,YCKhIsG,MA1Cf,YAA+B,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,KAErB,EAA0B7G,oBAAS,GAAnC,mBAAO8G,EAAP,KAAcC,EAAd,KACA,EAA0C/G,oBAAS,GAAnD,mBAAOgH,EAAP,KAAsBC,EAAtB,KACA,EAAsCjH,oBAAS,GAA/C,mBAAOkH,EAAP,KAAoBC,EAApB,KAsBA,OAASL,GACP,sBAAevF,UAAS,uBAAkB2F,EAAc,cAAgB,IAAxE,UACE,sBAAK3F,UAAU,QAAf,UACE,+BAAOsF,EAAKO,YAAiB,+BAAOP,EAAKQ,QAAa,+BAAOR,EAAKS,QAClE,wBAAQd,QAxBM,WAClBS,GAAiB,IAuBb,wBAEF,sBAAK1F,UAAS,0BAAsByF,EAAgB,UAAY,YAAhE,wBAEE,wBAAQzF,UAAU,sBAAsBiF,QApB5B,WAChBhG,IAAM+G,OAAN,UAAgB7G,uBAAhB,4BAAsE,CAACG,KAAK,CAACgG,KAAKA,EAAKW,oBACpF7G,MAAK,SAAAC,GACJuG,GAAe,GACfM,YAAYV,GAAS,GAAQ,SAE9B7F,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAaZ,mBAAuE,wBAAQI,UAAU,sBAAsBiF,QAxBvF,WAC5BS,GAAiB,IAuB0D,qBAPjEL,ICoFCc,MA1Gf,SAAuB3H,GAErB,MAAkCC,mBAAS,MAA3C,mBACA,GADA,UAC8BA,mBAAS,OAAvC,mBACA,GADA,UAC0DuD,YAAQ,CAACC,KAAK,SAAUC,aAAa,SAAvFG,EAAR,EAAQA,SAAuBE,EAA/B,EAAkBC,UAAaD,OAAUE,EAAzC,EAAyCA,aACzC,EAAwBhE,mBAAS,IAAjC,mBAAOa,EAAP,KAAa8G,EAAb,KACA,EAA2C3H,oBAAS,GAApD,mBAAO4H,EAAP,KAAsBC,EAAtB,KAEM5B,EAAOV,IA6BTe,EAAWC,cAOf,OACE,sBAAKhF,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,qBACW0E,EAAKnD,KADhB,IAEE,uBAAOnB,KAAK,SAAS6E,QATN,WACnBX,IACAS,EAAS,UAAW,CAACG,SAAQ,KAOmB5E,MAAM,cAEpD,qDACA,qKAEA,qBAAKN,UAAU,GAAf,SACE,uBAAMA,UAAU,aAAa4C,SAAUH,GAlC5B,SAACnD,GAChB,IAAIiH,EAAa1D,KAAKC,UAAUxD,EAAKkH,WAAWC,UAAU,EAAG,IACzDC,EAAW7D,KAAKC,UAAUxD,EAAKqH,MAAMF,UAAU,EAAG,IAEtDxH,IAAMC,IAAN,UAAaC,uBAAb,+CAA8EoH,EAA9E,gBAAgGG,IAC7FtH,MAAK,SAAAC,GACJQ,QAAQC,IAAI,qBAAsBT,EAASC,KAAKsH,aAEhDR,EAAQ/G,EAASC,KAAKsH,aACtBN,GAAkB,GAClBzG,QAAQC,IAAI,oCAAqC+C,KAAKC,UAAUxD,EAAKkH,eAEtE7G,OAAM,SAAAC,GACLC,QAAQC,IAAIF,SAqBZ,UAEI,qBAAKI,UAAU,GAAf,0BAEE,mCAAOA,UAAU,aACVI,KAAK,QACLiC,EAAS,YAAa,CAACwB,aAAa,MAE7C,cAAC,IAAD,CACEtB,OAAQA,EACRhB,KAAK,YACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACT,OAAQ,+BAAOA,OAKnB,qBAAK1D,UAAU,GAAf,oBACA,mCAAOA,UAAU,aACVI,KAAK,QACDiC,EAAS,OAAQ,CACnBwB,aAAa,MAGxB,cAAC,IAAD,CACEtB,OAAQA,EACRhB,KAAK,OACLkC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,QACT,OAAQ,+BAAOA,OAKnB,uBAAO1D,UAAU,eAAeI,KAAK,gBAIvCiG,GACF,qBAAKrG,UAAU,mBAAf,SAGIV,EAAKW,KAAI,SAACqF,EAAMnF,GAAP,OAAiB,cAAC,EAAD,CAA6BmF,KAAMA,GAArB,OAAQnF,Y,MCjD1D,IAAM0G,EAAe,SAAAC,GACnB,MAA0BrI,mBAASqI,GAAnC,mBAAOxG,EAAP,KAAcyG,EAAd,KAKA,MAAO,CACLzG,QACAG,SALmB,SAAAP,GACnB6G,EAAS7G,EAAE8G,OAAO1G,UASP2G,EA7Df,SAAezI,GAEb,MAA0BC,mBAAS,MAAnC,mBAAOmB,EAAP,KAAcsH,EAAd,KACA,EAA8BzI,oBAAS,GAAvC,mBAAO0I,EAAP,KAAgBC,EAAhB,KACIrC,EAAWC,cACTqC,EAAWR,EAAa,IACxBS,EAAWT,EAAa,IAoB9B,OACE,sBAAK7G,UAAU,gBAAf,UACE,4EACE,kCACE,yCACA,+CAAOA,UAAU,aAAaI,KAAK,QAAWiH,GAA9C,IAAwDE,aAAa,qBAEvE,kCACE,yCACA,+CAAOvH,UAAU,aAAaI,KAAK,YAAekH,GAAlD,IAA4DC,aAAa,qBAE1E3H,GAAS,qCAAE,uBAAO+D,MAAO,CAAE6D,MAAO,OAAvB,SAAiC5H,IAAc,0BAAU,uBACrE,gCACE,uBAAQI,UAAU,eAAeI,KAAK,SAASE,MAAO6G,EAAU,aAAe,QAASlC,QA/B5E,WAClBiC,EAAS,MACTE,GAAW,GACXnI,IAAMiE,KAAN,UAAc/D,uBAAd,+BAAuE,CAAEkI,SAAUA,EAAS/G,MAAOgH,SAAUA,EAAShH,QACnHlB,MAAK,SAAAC,GACJ+H,GAAW,GACX5C,EAAenF,EAASC,KAAKmF,MAAOpF,EAASC,KAAKoF,MAClDK,EAAS,cAAe,CAAEG,SAAS,OAClCvF,OAAM,SAAAC,GACTC,QAAQC,IAAIF,GACZwH,GAAW,GACmB,MAA1BxH,EAAMP,SAASoI,OAAgBP,EAAStH,EAAMP,SAASC,KAAKoE,SAC3DwD,EAAS,qDAmBoGQ,SAAUP,IAAW,8B,+CCnC9HQ,MANf,YAAyD,IAAlCC,EAAiC,EAAjCA,SAGrB,OAHsD,EAAvBC,WAAuB,iBACtDhI,QAAQC,IAAI,wBAEL8H,GCsDME,MAvDf,YAAgD,IAAxBF,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WAC5BpD,EAAQJ,IAGZ,EAAiC5F,oBAAS,GAA1C,mBAAOmD,EAAP,KAAiBC,EAAjB,KACA,EAAuBpD,oBAAS,GAAhC,mBAAOsJ,EAAP,KAAYC,EAAZ,KA4BA,OA1BAhJ,qBAAU,WACRC,IAAMC,IAAN,UAAaC,uBAAb,gDAA+EsF,IAC5ErF,MAAM,SAAAC,GAEkB,KAApBA,EAASC,KAAK2I,MACfpI,QAAQC,IAAI,qBAGZkI,GAAQ,GACRnG,GAAa,KAGbhC,QAAQC,IAAI,+BACZkI,GAAQ,GACRnG,GAAa,IAEfA,GAAa,MACZlC,OAAM,SAAAC,GAEPiC,GAAa,QAGhB,IAGHhC,QAAQC,IAAI,iBAAkB2E,GACzBA,EAKDsD,GACFlI,QAAQC,IAAI,0BACL8H,GAEHhG,GACF/B,QAAQC,IAAI,8BACJ,cAAC,IAAD,CAAUoI,GAAIL,KAKrBjG,OAAL,EACS,qBAAK5B,UAAU,UAAf,yCAhBPH,QAAQC,IAAI,uBACJ,cAAC,IAAD,CAAUoI,GAAIL,MC9BXM,MATf,WACE,OACE,gCACE,cAAC,IAAD,CAASD,GAAG,SAAZ,mBADF,gCC6DWE,MAnDf,WACE,MAAsC3J,oBAAS,GAA/C,mBAAO4J,EAAP,KAAoBC,EAApB,KACA,ECfa,WAEb,IAMA,EAA0B7J,qBAA1B,mBAAOgG,EAAP,KAAc8D,EAAd,KAOA,MAAO,CACLA,SANgB,SAAAC,GAChBtE,eAAeS,QAAQ,QAAS9B,KAAKC,UAAU0F,IAC/CD,EAASC,EAAU/D,QAKnBA,SDFwBgE,GAkB1B,OAlBA,EAAOhE,MAAP,EAAc8D,SAEdvJ,qBAAU,WACR,IAAMyF,EAAQJ,IACTI,GAILxF,IAAMC,IAAN,UAAaC,uBAAb,4CAA2EsF,IACxErF,MAAK,SAAAC,GACNmF,EAAenF,EAASC,KAAKmF,MAAOpF,EAASC,KAAKoF,MAClD4D,GAAe,MACd3I,OAAM,SAAAC,GACP0E,IACAgE,GAAe,QAEhB,IAECD,GAAehE,IACV,qBAAKrE,UAAU,UAAf,wCAIP,qBAAKA,UAAU,cAAf,SACE,eAAC,IAAD,WACE,sBAAKA,UAAU,OAAf,UACE,qBAAK0I,IAAI,gBAAgBC,IAAKC,IAC9B,sBAAK5I,UAAU,oBAAf,UACE,2DACA,sBAAKA,UAAU,mBAAf,UACE,cAAC,IAAD,CAASkI,GAAG,IAAZ,kBACA,cAAC,IAAD,CAASA,GAAG,SAAZ,mBACA,cAAC,IAAD,CAASA,GAAG,cAAZ,8BACA,cAAC,IAAD,CAASA,GAAG,iBAAZ,sCAKN,eAAC,IAAD,CAAQlI,UAAU,QAAlB,UACE,cAAC,IAAD,CAAOA,UAAU,GAAG6I,KAAK,IAAIC,QAAS,cAAC,EAAD,MACtC,cAAC,IAAD,CAAO9I,UAAU,GAAG6I,KAAK,SAASC,QAAS,cAAC,EAAD,CAAajB,WAAW,cAAxB,SAAsC,cAAC,EAAD,QACjF,cAAC,IAAD,CAAO7H,UAAU,GAAG6I,KAAK,cAAcC,QAAS,cAAC,EAAD,CAAcjB,WAAW,SAAzB,SAAkC,cAAC,EAAD,QAClF,cAAC,IAAD,CAAO7H,UAAU,GAAG6I,KAAK,iBAAiBC,QAAS,cAAC,EAAD,CAAcjB,WAAW,SAAzB,SAAkC,cAAC,EAAD,iBE/ChFkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAS9F,OACP,cAAC,IAAM+F,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.965e04dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.252cc60b.jpeg\";","import React, {useEffect, useRef, useState} from \"react\";\nimport axios from \"axios\";\nimport './style.css'\n\nfunction OrderList(props) {\n\n  const [checkedState, setCheckedState] = useState();\n  const ale = ['ale', 'marco', 'franco', 'giorgio']\n  const [orders,setOrders] = useState(null)\n  const [selectedOrders,setSelectedOrders] = useState(null)\n\n  useEffect(()=>{\n    axios.get(`${process.env.REACT_APP_HOST}:3000/api/business/nullOrdersWC`)\n      .then(response => {\n        let data = response.data.ordiniWCompany;\n        // console.log('dati scaricati', data.length)\n        // console.log(' lunghezza di dei dati', data.length)\n        setSelectedOrders(new Array(data.length).fill(null))\n        setCheckedState(new Array(data.length).fill(false))\n        // console.log(' lunghezza di orders', orders)\n        // console.log('lunghezza di checkedState ', checkedState.length)\n        setOrders(data)\n      }).catch(error => {\n      console.log(error)\n    });\n  },[props.aggiornami])\n\n\n\n  const handleOnChange = (position, id_order, daNonAnnullare) => {\n    const updateOrderSelection = selectedOrders.map((item, index) =>\n      index === position ? (daNonAnnullare ? id_order : null) : item);\n    setSelectedOrders(updateOrderSelection)\n    props.liftState(updateOrderSelection)\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item)\n    setCheckedState(updatedCheckedState);\n  }\n\n  return ( orders ?\n    <div className=\"no-bill-orders-list\">\n      <h3>Ordini senza fattura</h3>\n      <div className=\"to-choose-list\">\n        {orders.map((e, index) => {\n          // console.log('index', index)\n          return (\n\n              <div className=\"order-item\" key={index}>\n                <div className=\"left-section\">\n                  <input\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    // name={name}\n                    value={e.id_external_order}\n                    checked={checkedState[index]}\n                    onChange={() => handleOnChange(index, e, !checkedState[index])}\n                  />\n                  <label htmlFor={`custom-checkbox-${index}`}>\n                    <div className=\"cont-scroll ltl\">\n                      <span className=\"first-link\" href=\"\">\n                      {e.number_external_order}\n                      </span>\n                    </div>\n                    <span className=\"span-cPrice\">{\"€\"} {e.total_order}</span>\n                    {/*<div className=\"span-name\">*/}\n                    {/*  <span> {e.Company.name}</span>*/}\n                    {/*</div>*/}\n                    <div className=\"cont-scroll\">\n                      <span className=\"first-link\" href=\"\">\n                      {e.Company.name}\n                      </span>\n                    </div>\n                    {/*{`${e.id_external_order} ${e.Company.name}`}*/}\n                  </label>\n                </div>\n\n              </div>\n\n          );\n        })}\n\n      </div>\n            {/*<h2>Lista selezionata</h2>*/}\n            {/*<div>*/}\n            {/*  <ul>*/}\n            {/*    {*/}\n            {/*      selectedOrders.filter((e,index)=> e!==null)*/}\n            {/*        .map((e, index)=>{*/}\n            {/*          return (<li key={`u${index}`}>{e.id_external_order}</li>)*/}\n            {/*        })*/}\n            {/*    }*/}\n            {/*  </ul>*/}\n            {/*</div>*/}\n    </div>\n       : <div>caricamento</div>\n  )\n\n}\n\nexport default OrderList;\n","import React, {useEffect, useRef, useState} from \"react\";\n\nimport './style.css'\n\nfunction SelectedOrdersList({lista}) {\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n\n  useEffect(() => {\n    if (lista!==null){\n     setSelectedOrders(lista)\n    }\n    else{\n      setSelectedOrders([])\n    }\n  }, [lista])\n\n  return (\n    <div>\n      <h3>La fattura compilata verrà aggiunta a questi ordini: </h3>\n      <div className=\"gabbia-selected-orders\">\n          {\n            selectedOrders.filter((e,index)=> e!==null)\n              .map((e, index)=>{\n                return (<div className=\"selected-order\" key={`uSO${index}`}>{e.number_external_order}</div>)\n              })\n          }\n      </div>\n    </div>\n  )\n\n}\n\nexport default SelectedOrdersList;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport {retrieveCompanies, postBillData} from \"../../../Utils/dbCall\";\nimport './formAddInvoice.style.css'\n\nfunction InvoiceForm(props) {\n  const [dataReady, setDataReady] = useState(false)\n  const [companies, setCompanies] = useState(null)\n  const { register, watch, formState: { errors }, handleSubmit } = useForm({mode:\"onBlur\", criteriaMode:\"all\", defaultValues: {iva_amount: \"0.00\"}});\n  const watchIVA = watch(\"with_iva\", false)\n\n  const onSubmit = (data) => {\n    console.log('dati provenienti dal form', data)\n    console.log('dati provenienti dal form', JSON.stringify(data))\n    console.log('dati provenienti dalla selezione ordini', JSON.stringify(props.ordiniDaAggiornare))\n    try{\n      postBillData(data, props.ordiniDaAggiornare.filter(order=>order !== null).map(order=>order.id_external_order))\n      alert(JSON.stringify(data));\n    }\n    catch (e) {\n      alert('manca ordine a cui allegare la fattura')\n    }\n    props.aggiornaOrdini()\n\n  }\n\n  useEffect( () => {\n    retrieveCompanies().then(data =>{\n      setCompanies(data)\n      setDataReady(true)}\n    )\n\n\n  },[])\n\n\n  return ( dataReady ?\n      <div className=\"form-container\">\n          <form className=\"\" onSubmit={handleSubmit(onSubmit)}>\n              <div className=\"form-fields\">\n            <div className=\"jfy-right\">Numero fattura</div>\n                <div className=\"jfy-left\">\n                  <input className=\"input-text\" {...register(\"id_bs\", { required: 'Questo campo è obbligatorio' })} placeholder=\"Numero fattura\" />\n                  <ErrorMessage\n                    errors={errors}\n                    name=\"id_bs\"\n                    render={({ message }) => {\n                      console.log('fanculo')\n                      return (<span style={{\"margin-left\":'5px', 'color':'red'}}>{message}</span>)\n                    }}\n                  />\n                </div>\n                <div className=\"jfy-right\">Azienda: </div>\n                <select className=\"jfy-left input-text\" {...register(\"id_company\")}>\n                  {companies.map( e => <option key={`c-${e.id_company}`} value={e.id_company}>{e.name}</option>)}\n                </select>\n                <div className=\"jfy-right\">Data di fatturazione</div>\n                <input className=\"jfy-left input-text calendar\"\n                  type=\"date\"\n                  {...register(\"bill_date\", {\n                    valueAsDate: true,\n                  })}\n                />\n                <div className=\"jfy-right\">Data di invio fattura</div>\n                <input className=\"jfy-left input-text calendar\"\n                  type=\"date\"\n                  {...register(\"date_notification\", {\n                    valueAsDate: true\n                  })}\n                />\n                <div className=\"jfy-right\">Data di invio incasso</div>\n                <input className=\"jfy-left input-text calendar\"\n                  type=\"date\"\n                  {...register(\"date_transaction\", {\n                    valueAsDate: true\n                  })}\n                />\n                <div className=\"jfy-right\">Data di valuta</div>\n                <input className=\"jfy-left input-text calendar\"\n                  type=\"date\"\n                  {...register(\"date_currency\", {\n                    valueAsDate: true\n                  })}\n                />\n                <div className=\"jfy-right\">Totale fattura</div>\n                <div className=\"jfy-left\">\n                  <input className=\"input-text\" type=\"string\"\n                     {...register(\"total\", {\n                       required: 'campo obbligatorio',\n                       pattern: {\n                         value:/[1-9][0-9]{0,4}\\.[0-9]{2}/,\n                         message: 'usa il formato 0.00'\n                       }\n                        })\n                     }\n                  />\n                  <ErrorMessage\n                    errors={errors}\n                    name=\"total\"\n                    render={({ message }) => {\n                      return (<span style={{\"margin-left\":'5px', 'color':'red'}}>{message}</span>)\n                    }}\n                  />\n                </div>\n                <div className=\"jfy-right\">con IVA ?</div>\n                <div className=\"jfy-left\" >\n                  <input {...register(\"with_iva\")} type=\"checkbox\" />\n                  <ErrorMessage\n                    errors={errors}\n                    name=\"with_iva\"\n                    render={({ message }) => {\n                    return (<span>{message}</span>)\n                    }}\n                  />\n                  { watchIVA &&\n                    <div>\n                      <span>Totale iva</span>\n                      <input className=\"input-text\" {...register(\"iva_total\", {\n                        required: 'Questo campo è obbligatorio',\n                        pattern: {\n                          value:/[1-9][0-9]{0,4}\\.[0-9]{2}/,\n                          message: 'usa il formato 0.00'\n                        }})\n                      }  className=\"calendar\"\n                         placeholder=\"Totale iva\" />\n                      <ErrorMessage\n                        errors={errors}\n                        name=\"iva_total\"\n                        render={({ message }) => {\n                          return (<span style={{\"margin-left\":'5px', 'color':'red'}}>{message}</span>)\n                        }}\n                      />\n                    </div>\n                  }\n                </div>\n                <div className=\"jfy-right\">Giorni per il pagamento</div>\n                <div className=\"jfy-left\">\n                  <input className=\"input-text\" type=\"number\" {...register(\"payment_to_GG_days\", { required: 'Questo campo è obbligatorio' })} placeholder=\"Numero giorni\" />\n                  <ErrorMessage\n                    errors={errors}\n                    name=\"payment_to_GG_days\"\n                    render={({ message }) => {\n                      return (<span style={{\"margin-left\":'5px', 'color':'red'}}>{message}</span>)\n                    }}\n                  />\n                </div>\n                <div className=\"jfy-right\">Data di pagamento stimata</div>\n                <input className=\"jfy-left input-text calendar\"\n                    type=\"date\"\n                    {...register(\"months_payment_expected\", {\n                      valueAsDate: true,\n                      required: 'Questo campo è obbligatorio'\n                    })}\n                  />\n                <div className=\"jfy-right\">Eventuali note </div>\n                <div className=\"jfy-left\">\n                  <input className=\"jfy-left input-text\" {...register(\"note\", { required: 'Questo campo è obbligatorio' })} placeholder=\"...\" />\n                  <ErrorMessage\n                    errors={errors}\n                    name=\"note\"\n                    render={({ message }) => {\n                      return (<span style={{\"margin-left\":'5px', 'color':'red'}}>{message}</span>)\n                    }}\n                  />\n                </div>\n                {/*<input type=\"hidden\" {...register('id_bs_personal_data_business')} type=\"number\" value=\"2\" />*/}\n\n              </div>\n            {/*<svg xmlns=\"http://www.w3.org/2000/svg\" >*/}\n            {/*  <defs>*/}\n            {/*    /!*<style>.cls-1{fill:red;}</style>*!/*/}\n            {/*  </defs>*/}\n            {/*  <title>Risorsa 1</title>*/}\n            {/*  <g id=\"Livello_2\" data-name=\"Livello 2\">*/}\n            {/*    <g id=\"Livello_1-2\" data-name=\"Livello 1\">*/}\n            {/*      <rect fill=\"blue\" width=\"156\" height=\"136\"/>*/}\n            {/*      <path fill=\"red\"*/}\n            {/*            d=\"M128.69,304,434,310,276,321H0V0L30.14,218.12A99.49,99.49,0,0,0,128.69,304Z\"/>*/}\n            {/*    </g>*/}\n            {/*  </g>*/}\n            {/*</svg>*/}\n              <div>{props.listaSelezionata}</div>\n            <input className=\"input-button\" type=\"submit\" />\n        </form>\n      </div>\n      : <div> in attesa dei dati</div>\n  )\n}\n\nexport default InvoiceForm\n","import axios from \"axios\";\n\nexport const retrieveCompanies = () => {\n  return axios.get(`${process.env.REACT_APP_HOST}:3000/api/business/companies`)\n    .then(response => {\n      let data = response.data.companiesList;\n      return data\n    }).catch(error => {\n    console.log(error)\n  });\n}\n\nexport const postBillData = (formData, ordiniDaAggiornare) => {\n  return axios.post(`${process.env.REACT_APP_HOST}:3000/api/business/bill`, {\n    data: {\n      form:formData,\n      ordersToUpdate: ordiniDaAggiornare\n    }\n  })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log('fattura non corretta: ', error);\n      alert('fattura non salvata: mancano dei dati')\n    });\n}\n","// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n\n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n\n// set the token and user from the session storage\nexport const setUserSession = (token, user) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}\n","import React, {useEffect, useRef, useState} from \"react\";\n\nimport OrderList from \"./OrderList/OrderList\";\nimport SelectedOrdersList from \"./SelectedOrdersList/SelectedOrdersList\";\nimport InvoiceForm from \"./InvoiceForm/InvoiceForm\";\nimport {useNavigate} from \"react-router-dom\";\nimport { getUser, removeUserSession } from '../../Utils/Common';\nimport './invoice.style.css'\n\n\nfunction InvoiceApp(props) {\n  const [selectedOrders, setSelectedOrders] = useState(null)\n  const [update, setUpdate] = useState(false)\n  const user = getUser();\n\n  const updateOrdersListAfterBill = () => {\n    setUpdate(!update)\n    setSelectedOrders(null)\n  }\n\n  const getSelectedOrders = (ordiniSelezionati) => {\n    setSelectedOrders(ordiniSelezionati)\n  }\n\n  let navigate = useNavigate()\n\n  const handleLogout = () => {\n    removeUserSession();\n    navigate('./login', {replace:true})\n  }\n\n\n  return (\n    <div className=\"invoice-app\">\n      <div className=\"welcome\">\n        Welcome {user.name}!\n        <input type=\"button\" onClick={handleLogout} value=\"Logout\" />\n      </div>\n      <h1>Aggiungi una fattura</h1>\n\n      <OrderList liftState={getSelectedOrders} aggiornami={update}/>\n      <InvoiceForm ordiniDaAggiornare={selectedOrders} aggiornaOrdini={updateOrdersListAfterBill} listaSelezionata={<SelectedOrdersList lista={selectedOrders} />}></InvoiceForm>\n      {/*<SelectedOrdersList lista={selectedOrders}/>*/}\n    </div>\n  )\n}\n\nexport default InvoiceApp;\n","import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport './BillRow.style.css'\n\nfunction BillRow({key, bill}) {\n\n  const [exist, setExist] = useState(true)\n  const [deleteConfirm, setDeleteConfirm] = useState(false)\n  const [iAmDeliting, setIAmDeleting] = useState(false)\n\n  const handleClick = () => {\n    setDeleteConfirm(true)\n  }\n\n  const closeConfirmationMenu = () => {\n    setDeleteConfirm(false)\n  }\n\n  const deleteRow = () => {\n    axios.delete(`${process.env.REACT_APP_HOST}:3000/api/business/bill/`, {data:{bill:bill.id_internal_bill}})\n      .then(response => {\n        setIAmDeleting(true)\n        setInterval(setExist(false), 1500)\n      })\n      .catch(error => {\n        console.log(error)\n      });\n\n  }\n\n  return ( exist &&\n    <div key={key} className={`deletableRow ${iAmDeliting ? 'cancellando' : ''}`}>\n      <div className=\"fissi\">\n        <span>{bill.bill_date}</span><span>{bill.id_bs}</span><span>{bill.total}</span>\n        <button onClick={handleClick}>Elimina</button>\n      </div>\n      <div className={ `confirmationDiv ${deleteConfirm ? 'compaio' : 'scompaio'}`}>\n        Eliminare ?\n        <button className=\"input-button-choose\" onClick={deleteRow}>Sì</button><button className=\"input-button-choose\" onClick={closeConfirmationMenu}>No</button>\n      </div>\n\n    </div>\n  )\n\n}\n\nexport default BillRow;\n","import React, {useEffect, useState} from \"react\";\nimport './deleteInvoice.style.css'\nimport axios from \"axios\";\nimport BillRow from \"./BillRow/BillRow\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport {getUser, removeUserSession} from \"../../Utils/Common\";\nimport {useNavigate} from \"react-router-dom\";\n\nfunction DeleteInvoice(props) {\n\n  const [startDate, setStartDate] = useState(null)\n  const [endDate, setEndDate] = useState(null)\n  const { register, formState: { errors }, handleSubmit } = useForm({mode:\"onBlur\", criteriaMode:\"all\"});\n  const [data, setData] = useState([])\n  const [billsDataReady,setBillsDataReady] = useState(false)\n\n  const user = getUser();\n\n  // useEffect(() => {\n  //   axios.get(`http://localhost:3000/api/business/bill/range?start=2012-01-01&end=2013-01-01`)\n  //     .then(response => {\n  //       console.log('dati delle fatture', response.body.rangedBills)\n  //\n  //     }).catch(error => {\n  //       console.log(error)\n  //     });\n  // })\n\n  const onSubmit = (data) => {\n    let dataInizio = JSON.stringify(data.startFrom).substring(1, 11)\n    let dataFine = JSON.stringify(data.upTo).substring(1, 11)\n\n    axios.get(`${process.env.REACT_APP_HOST}:3000/api/business/bill/range?start=${dataInizio}&end=${dataFine}`)\n      .then(response => {\n        console.log('dati delle fatture', response.data.rangedBills)\n        // alert(JSON.stringify(dataFine));\n        setData(response.data.rangedBills)\n        setBillsDataReady(true)\n        console.log('dati delle date inseriti dal form', JSON.stringify(data.startFrom))\n      })\n      .catch(error => {\n        console.log(error)\n      });\n  }\n\n  let navigate = useNavigate()\n\n  const handleLogout = () => {\n    removeUserSession();\n    navigate('./login', {replace:true})\n  }\n\n  return (\n    <div className=\"delContainer\">\n      <div className=\"welcome\">\n        Welcome {user.name}!\n        <input type=\"button\" onClick={handleLogout} value=\"Logout\" />\n      </div>\n      <h1>Elimina una fattura</h1>\n      <p>Per eliminare una fattura seleziona una delle ultime esaurite oppure cercane una più vecchia selezionando un'intervallo di tempo.</p>\n\n      <div className=\"\">\n        <form className=\"deleteForm\" onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"\">A partire da</div>\n\n              <input className=\"input-text\"\n                     type=\"date\"\n                 {...register(\"startFrom\", {valueAsDate: true})}\n              />\n            <ErrorMessage\n              errors={errors}\n              name=\"startFrom\"\n              render={({ message }) => {\n                return (<span>{message}</span>)\n              }}\n            />\n\n\n            <div className=\"\">Fino a</div>\n            <input className=\"input-text\"\n                   type=\"date\"\n                   {...register(\"upTo\", {\n                     valueAsDate: true\n                   })}\n            />\n          <ErrorMessage\n            errors={errors}\n            name=\"upTo\"\n            render={({ message }) => {\n              return (<span>{message}</span>)\n            }}\n          />\n\n\n          <input className=\"input-button\" type=\"submit\" />\n        </form>\n      </div>\n\n      { billsDataReady &&\n      <div className=\"billRowContainer\">\n\n        {\n          data.map((bill, index) => <BillRow key={'bill'+ index} bill={bill}></BillRow>\n          )\n        }\n      </div>\n\n      }\n    </div>\n  )\n\n}\n\nexport default DeleteInvoice;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport './Login.css'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { setUserSession } from '../../Utils/Common';\n\nfunction Login(props) {\n\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  let navigate = useNavigate()\n  const username = useFormInput('')\n  const password = useFormInput('');\n\n  const handleLogin = () => {\n    setError(null);\n    setLoading(true);\n    axios.post(`${process.env.REACT_APP_HOST}:3000/api/auth/users/signin`, { username: username.value, password: password.value })\n      .then(response => {\n        setLoading(false);\n        setUserSession(response.data.token, response.data.user);\n        navigate('/addInvoice', { replace: true })\n      }).catch(error => {\n      console.log(error)\n      setLoading(false);\n      if (error.response.status === 401) setError(error.response.data.message);\n      else setError(\"Something went wrong. Please try again later.\");\n    });\n  }\n\n\n\n  return (\n    <div className=\"login-wrapper\">\n      <h1>Esegui l'accesso per modificare le fatture</h1>\n        <label>\n          <p>Username</p>\n          <input className=\"input-text\" type=\"text\" {...username} autoComplete=\"new-password\" />\n        </label>\n        <label>\n          <p>Password</p>\n          <input className=\"input-text\" type=\"password\" {...password} autoComplete=\"new-password\" />\n        </label>\n        {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n        <div>\n          <input  className=\"input-button\" type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\n\n        </div>\n\n    </div>\n  )\n\n}\n\nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n\n\nexport default Login;\n","import React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport { getToken } from './Common';\n\n// handle the public routes\nfunction PublicRoute({ children, redirectTo, ...rest }) {\n  console.log('sono in public route')\n  // return !getToken() ? children : <Navigate to={redirectTo}/>\n  return children\n}\n\nexport default PublicRoute;\n","import React, {useEffect, useState} from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport {getToken, removeUserSession} from './Common';\nimport axios from \"axios\";\n\n// handle the private routes\n\nfunction PrivateRoute({ children, redirectTo}) {\n  let token = getToken()\n  // let auth = false\n  // let dataReady = false\n  const [dataReady,setDataReady] = useState(false)\n  const [auth,setAuth] = useState(false)\n\n  useEffect(()=>{\n    axios.get(`${process.env.REACT_APP_HOST}:3000/api/auth/verifyFakeToken?token=${token}`)\n      .then( response => {\n        // if(!response.ok) throw new Error(response.status)\n        if(response.data.code==233) {\n          console.log('u used fake token')\n          // authorized = false\n          // return <Navigate to={redirectTo}/>\n          setAuth(false)\n          setDataReady(true)\n        }\n        else{\n          console.log('non hai usato un token fake')\n          setAuth(true)\n          setDataReady(true)\n        }\n        setDataReady(true)\n      }).catch(error => {\n        // removeUserSession();\n        setDataReady(true);\n      });\n\n  }, [])\n\n  let component;\n  console.log('prova verifica', token)\n  if (!token) {\n    console.log('il token non esiste')\n    return  <Navigate to={redirectTo} />\n  }\n\n  if (auth){\n    console.log('sono stato autorizzato')\n    return children\n  } else {\n    if (dataReady){\n      console.log('non sono stato autorizzato')\n      return  <Navigate to={redirectTo} />\n\n    }\n  }\n\n  if (!dataReady) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n}\n\n\nexport default PrivateRoute;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nfunction Home() {\n  return (\n    <div>\n      <NavLink to=\"/login\">Login</NavLink>\n      Welcome to the Home Page!\n    </div>\n  );\n}\n\nexport default Home;\n","import logo from './logo.jpeg'\nimport './App.css';\nimport InvoiceApp from \"./components/InvoiceApp/InvoiceApp\";\nimport DeleteInvoice from \"./components/DeleteInvoice/DeleteInvoice\";\nimport Login from \"./components/Login/Login\";\nimport { BrowserRouter, Route, Routes, NavLink } from 'react-router-dom';\nimport useToken from \"./components/costumHooks/useToken\";\nimport React,{useState, useEffect} from \"react\";\nimport PublicRoute from \"./Utils/PublicRoute\";\nimport PrivateRoute from \"./Utils/PrivateRoute\";\nimport Home from \"./components/Home/Home\";\nimport axios from 'axios'\nimport { getToken, removeUserSession, setUserSession } from './Utils/Common';\n\n\nfunction App() {\n  const [authLoading, setAuthLoading] = useState(true);\n  const {token, setToken} = useToken()\n\n  useEffect(() => {\n    const token = getToken();\n    if (!token) {\n      return;\n    }\n\n    axios.get(`${process.env.REACT_APP_HOST}:3000/api/auth/verifyToken?token=${token}`)\n      .then(response => {\n      setUserSession(response.data.token, response.data.user);\n      setAuthLoading(false);\n    }).catch(error => {\n      removeUserSession();\n      setAuthLoading(false);\n    });\n  }, []);\n\n  if (authLoading && getToken()) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"wrapper App\">\n      <BrowserRouter>\n        <div className=\"menu\">\n          <img alt='logo del sito' src={logo}></img>\n          <div className=\"title-nav-section\">\n            <h1>Black Skip / Fatturazione</h1>\n            <div className=\"header riga-link\">\n              <NavLink to=\"/\">Home</NavLink>\n              <NavLink to=\"/login\">Login</NavLink>\n              <NavLink to=\"/addInvoice\">Aggiungi fattura</NavLink>\n              <NavLink to=\"/deleteInvoice\">Elimina fattura</NavLink>\n            </div>\n          </div>\n        </div>\n\n        <Routes className=\"route\">\n          <Route className=\"\" path=\"/\" element={<Home/>} />\n          <Route className=\"\" path=\"/login\" element={<PublicRoute redirectTo='/addInvoice'><Login/></PublicRoute>}/>\n          <Route className=\"\" path=\"/addInvoice\" element={<PrivateRoute redirectTo=\"/login\"><InvoiceApp/></PrivateRoute>}/>\n          <Route className=\"\" path=\"/deleteInvoice\" element={<PrivateRoute redirectTo=\"/login\"><DeleteInvoice/></PrivateRoute>}/>\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import {useState} from \"react\";\n\nexport default function useToken() {\n\n  const getToken = () => {\n    const tokenString = sessionStorage.getItem('token')\n    const userToken = JSON.parse(tokenString);\n    return userToken?.token\n  }\n\n  const [token, setToken] = useState();\n\n  const saveToken = userToken => {\n    sessionStorage.setItem('token', JSON.stringify(userToken))\n    setToken(userToken.token)\n  }\n\n  return {\n    setToken: saveToken,\n    token\n  }\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}